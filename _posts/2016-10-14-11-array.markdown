---
layout: post
title:  "11 配列"
date:   2016-10-14 00:00:00 +0900

---

# 大量のデータを扱いたいとき
1つの変数には、1つのデータしか入れることは出来ません。しかしこれでは、ある学生たちの平均点を出したいときのように、同じ性質や意味を持つ大量のデータを処理するときに困ってしまいます。

今までの知識で上の問題を解こうとすると、こんな感じになるでしょうか。

{% highlight c linenos %}
#include <stdio.h>
int main(void)
{
        // 生徒1から生徒5の点数
        int st1 = 60;
        int st2 = 89;
        int st3 = 32;
        int st4 = 98;
        int st5 = 78;

        int sum;        // 合計点
        float ave;      // 平均点

        sum = st1 + st2 + st3 + st4 + st5;
        ave = sum / 5.0;

        printf("平均点は%0.1f点です。\n", ave);

        return 0;
}
{% endhighlight %}

では、今度はクラス40人分の平均点を……となると、とてもやっていられません。

# 配列
配列は、こういう時に便利です。

配列は、同じ型の変数（箱）が連なって組になっているようなものです。組になった変数全体につける名前を配列名といい、個々の変数は添え字という番号で区別します。添え字は、「0, 1, 2, ...」という具合に付けていきます。

また、配列を使うには、組になる変数をいくつ用意すればよいか、あらかじめ決めておく必要があります。その数の事を、要素数といいます。

配列も変数と同じで、「宣言」してから使います。

```
// 配列宣言の書式
型 配列名[要素数];

// 例
int student_numbers[40];
```

それでは、実際にC言語で「配列」を使ってみましょう。以下のコードを書いてください。ファイル名は、11_array.cとします。

{% highlight c linenos %}
#include <stdio.h>

int main(void)
{
        int a[3];

        a[0] = 1;
        a[1] = 2;
        a[2] = 3;

        printf("a[0] = %d\n", a[0]);
        printf("a[1] = %d\n", a[1]);
        printf("a[2] = %d\n", a[2]);

        return 0;
}
{% endhighlight %}


実行結果は、以下のようになるはずです。
```
a[0] = 1
a[1] = 2
a[2] = 3
```

私達人間は通常1から数字を数えますが、C言語の配列は0から数えると覚えておいてください。


# 配列と繰り返し




# 練習問題
## 1. 2,4,6,8と表示するプログラム
while文またはdo-while文を使って、次のように画面に出力するコードを書いてください。ファイル名は、step.cとします。

```
2
4
6
8
```

## 総和プログラム
while文またはdo-while文を使って、キーボードから入力された数字の総和を求めるプログラムを作りなさい。ただし、0が入力された時点でキーボードからの入力を終了し、その時点での合計を出力することとします。

例：

```
1
10
2
-1
-5
0

合計は、7です。
```

-->
